# Generated by Django 3.2.7 on 2021-12-27 19:07

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=25, unique=True)),
                ('text', models.CharField(max_length=4000)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('date_joined', models.DateTimeField(blank=True, null=True)),
                ('date_of_birth', models.DateTimeField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], max_length=100, null=True)),
                ('ranking', models.IntegerField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_date', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('status', models.CharField(choices=[('SCHEDULED', 'SCHEDULED'), ('PLAYING', 'PLAYING'), ('COMPLETED', 'COMPLETED'), ('CANCELED', 'CANCELED')], default='SCHEDULED', max_length=50, null=True)),
                ('venue', models.CharField(blank=True, max_length=100, null=True)),
                ('match_result', models.CharField(blank=True, choices=[('WIN', 'WIN'), ('DRAW', 'DRAW')], max_length=100, null=True)),
                ('player_one_entry_ranking', models.IntegerField(blank=True, null=True)),
                ('player_two_entry_ranking', models.IntegerField(blank=True, null=True)),
                ('player_one_ranking_change', models.IntegerField(blank=True, null=True)),
                ('player_two_ranking_change', models.IntegerField(blank=True, null=True)),
                ('follow_live', models.CharField(blank=True, default='https://<LINK TO BE COMPLETED>', max_length=255, null=True)),
                ('player_one', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player_one', to='ChessAdminApp.player')),
                ('player_two', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player_two', to='ChessAdminApp.player')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='winner', to='ChessAdminApp.player')),
            ],
        ),
        migrations.AddConstraint(
            model_name='match',
            constraint=models.CheckConstraint(check=models.Q(('player_one__isnull', False), ('player_two__isnull', False), models.Q(('player_one', django.db.models.expressions.F('player_two')), _negated=True)), name='1_two_players_required'),
        ),
        migrations.AddConstraint(
            model_name='match',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('match_result__isnull', True), ('status', 'SCHEDULED')), models.Q(('match_result__isnull', True), ('status', 'PLAYING')), models.Q(('match_result__isnull', False), ('status', 'COMPLETED')), models.Q(('match_result__isnull', True), ('status', 'CANCELED')), _connector='OR'), name='2_complete_match_result'),
        ),
        migrations.AddConstraint(
            model_name='match',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('match_result__isnull', True), ('winner__isnull', True)), models.Q(('match_result', 'DRAW'), ('match_result__isnull', False), ('winner__isnull', True)), models.Q(('match_result', 'WIN'), ('match_result__isnull', False), ('winner__isnull', False)), _connector='OR'), name='3_winner_on_complete'),
        ),
        migrations.AddConstraint(
            model_name='match',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('match_result', 'DRAW'), ('winner__isnull', True)), models.Q(('match_result', 'WIN'), ('winner', django.db.models.expressions.F('player_one'))), models.Q(('match_result', 'WIN'), ('winner', django.db.models.expressions.F('player_two'))), _connector='OR'), name='4_winner_is_in_match'),
        ),
        migrations.AddConstraint(
            model_name='match',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('player_one_entry_ranking__isnull', True), ('player_two_entry_ranking__isnull', True), ('status', 'SCHEDULED')), models.Q(('player_one_entry_ranking__isnull', False), ('player_two_entry_ranking__isnull', False), ('status', 'PLAYING')), models.Q(('player_one_entry_ranking__isnull', False), ('player_two_entry_ranking__isnull', False), ('status', 'COMPLETED')), ('status', 'CANCELED'), _connector='OR'), name='5_playing_entry_ranks'),
        ),
        migrations.AddConstraint(
            model_name='match',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('match_result__isnull', True), ('player_one_ranking_change__isnull', True), ('player_two_ranking_change__isnull', True)), models.Q(('match_result__isnull', False), ('player_one_ranking_change__isnull', False), ('player_two_ranking_change__isnull', False)), _connector='OR'), name='6_complete_match_ranking'),
        ),
    ]
